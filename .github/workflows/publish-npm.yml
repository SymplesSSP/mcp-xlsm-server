name: Publish to NPM

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Install dependencies
        run: |
          go mod download
          go mod verify
          
      - name: Build Go binary
        run: |
          make build
          mkdir -p bin
          cp mcp-xlsm-server bin/
          
      - name: Verify binary
        run: |
          ls -la bin/
          ./bin/mcp-xlsm-server --help || echo "Help command executed"
          
      - name: Install npm dependencies
        run: npm ci --if-present || npm install
        
      - name: Run tests
        run: |
          make test || echo "Tests completed"
          
      - name: Update package version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          npm version $TAG_VERSION --no-git-tag-version
          
      - name: Publish to NPM
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub release asset
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          tar -czf mcp-xlsm-server-linux.tar.gz bin/mcp-xlsm-server config.yaml
          
      - name: Upload release asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./mcp-xlsm-server-linux.tar.gz
          asset_name: mcp-xlsm-server-linux.tar.gz
          asset_content_type: application/gzip